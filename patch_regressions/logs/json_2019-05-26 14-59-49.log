----- Unit tests start -----
Running test 1 of 31: add test 1: basic add
Checking results against check file check_01.json...
Success!
Running test 2 of 31: add test 2: repeat of basic add. should do nothing
Checking results against check file check_02.json...
Success!
Running test 3 of 31: add test 3: same path as basic add, but different value to insert. should update the value
Checking results against check file check_03.json...
Success!
Running test 4 of 31: add test 4: add of a new object as well as the path. should create object paths to value
Checking results against check file check_04.json...
Success!
Running test 5 of 31: add test 5: add of a new property to part object path that already exists. should add the value without overwriting the path
Checking results against check file check_05.json...
Success!
Running test 6 of 31: add test 6: add of a new blank array
Checking results against check file check_06.json...
Success!
Running test 7 of 31: add test 7: add of a new blank object
Checking results against check file check_07.json...
Success!
Running test 8 of 31: add test 8: add of new property with slash escape
Checking results against check file check_08.json...
Success!
Running test 9 of 31: edit test 1: edit attempt of path that does not exist. should note it log and abort
Checking results against check file check_09.json...
Success!
Running test 10 of 31: edit test 2: object edit attempt of array. should note in log and abort
Checking results against check file check_10.json...
Success!
Running test 11 of 31: edit test 3: edit attempt of simple path. should change the one value
Checking results against check file check_11.json...
Success!
Running test 12 of 31: edit test 4: edit attempt of simple path. should change the one value (false, should report value entry same and exit)
Checking results against check file check_12.json...
Success!
Running test 13 of 31: array edit test 1: edit of array of values. should change the last value in the array
Checking results against check file check_13.json...
Success!
Running test 14 of 31: array edit test 2: edit of array of objects. should parse every value of 421 or above to be 420 (regex style)
Checking results against check file check_14.json...
Success!
Running test 15 of 31: array edit test 3: edit of array of objects. should parse every value of 419 or below to be 420 (regex style)
Checking results against check file check_15.json...
Success!
Running test 16 of 31: array edit test 4: edit array of objects. should parse every value less than 420 to be 420 (jsonpath style)
Checking results against check file check_16.json...
Success!
Running test 17 of 31: array edit test 5: edit array of objects. should parse every value more than 420 to be 420 (jsonpath style)
Checking results against check file check_17.json...
Success!
Running test 18 of 31: remove test 1: basic remove test with property
Checking results against check file check_18.json...
Success!
Running test 19 of 31: remove test 2: advanced remove test with property matching (should not remove as text not matched)
Checking results against check file check_19.json...
Success!
Running test 20 of 31: remove test 3: advanced remove test with property matching (should remove, text matched)
Checking results against check file check_20.json...
Success!
Running test 21 of 31: arrayAdd test 1: basic add of jValue at index 0
Checking results against check file check_21.json...
Success!
Running test 22 of 31: arrayAdd test 2: basic add of jValue at index -1 (last)
Checking results against check file check_22.json...
Success!
Running test 23 of 31: arrayAdd test 3: attempt add of object to array of JValue, should fail
Checking results against check file check_23.json...
Success!
Running test 24 of 31: arrayAdd test 4: attempt add of jValue to array of object, should fail
Checking results against check file check_24.json...
Success!
Running test 25 of 31: arrayAdd test 5: basic add of object
Checking results against check file check_25.json...
Success!
Running test 26 of 31: arrayRemove test 1: basic remove of jValue "test"
Checking results against check file check_26.json...
Success!
Running test 27 of 31: arrayRemove test 2: basic remove of jValue "test3" (does not exist, should fail)
Checking results against check file check_27.json...
Success!
Running test 28 of 31: arrayRemove test 3: basic remove of jObject "enable:true"
Checking results against check file check_28.json...
Success!
Running test 29 of 31: arrayClear test 1: basic clear of jValue "username"
Checking results against check file check_29.json...
Success!
Running test 30 of 31: arrayClear test 2: basic clear of jValue "username" (does not exist)
Checking results against check file check_30.json...
Success!
Running test 31 of 31: arrayClear test 3: basic clear of object ".*" (all)
Checking results against check file check_31.json...
Success!
----- Unit tests finish (pass)-----
